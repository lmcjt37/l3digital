///
/// Forty by HTML5 UP
/// html5up.net | @ajlkn
/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
///

/* Button */

input[type='submit'],
input[type='reset'],
input[type='button'],
button,
.button {
    @include vendor('appearance', 'none');
    @include vendor(
        'transition',
        (
            'color #{_duration(transition)} ease-in-out',
            'box-shadow #{_duration(transition)} ease-in-out',
            'background-color #{_duration(transition)} ease-in-out'
        )
    );
    background-color: transparent;
    border: 0;
    border-radius: 0;
    box-shadow: inset 0 0 0 2px _palette(fg-bold);
    color: _palette(fg-bold);
    cursor: pointer;
    display: inline-block;
    font-size: 0.8em;
    font-weight: _font(weight-bold);
    height: 3.5em;
    letter-spacing: _font(letter-spacing-alt);
    line-height: 3.5em;
    padding: 0 1.75em;
    text-align: center;
    text-decoration: none;
    text-transform: uppercase;
    white-space: nowrap;

    &:hover,
    &:active {
        box-shadow: inset 0 0 0 2px _palette(highlight);
        color: _palette(bg);
    }

    &:active {
        background-color: transparentize(_palette(highlight), 0.9);
        box-shadow: inset 0 0 0 2px
            desaturate(darken(_palette(highlight), 15), 5);
        color: desaturate(darken(_palette(highlight), 15), 5);
    }

    &.icon {
        &:before {
            margin-right: 0.5em;
        }
    }

    &.fit {
        display: block;
        margin: 0 0 (_size(element-margin) * 0.5) 0;
        width: 100%;
    }

    &.small {
        font-size: 0.6em;
    }

    &.big {
        font-size: 1.25em;
        height: 3em;
        line-height: 3em;
    }

    &.next {
        padding-right: 4.5em;
        position: relative;

        &:before,
        &:after {
            @include vendor(
                'transition',
                'opacity #{_duration(transition)} ease-in-out'
            );
            background-position: center right;
            background-repeat: no-repeat;
            background-size: 36px 24px;
            content: '';
            display: block;
            height: 100%;
            position: absolute;
            right: 1.5em;
            top: 0;
            vertical-align: middle;
            width: 36px;
        }

        &:before {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(fg-bold)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="25" y1="4" x2="34" y2="12.5" /><line x1="25" y1="20" x2="34" y2="11.5" /></svg>'
            );
        }

        &:after {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(highlight)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="25" y1="4" x2="34" y2="12.5" /><line x1="25" y1="20" x2="34" y2="11.5" /></svg>'
            );
            opacity: 0;
            z-index: 1;
        }

        &:hover,
        &:active {
            &:after {
                opacity: 1;
            }
        }

        @include breakpoint(large) {
            padding-right: 5em;
        }
    }

    &.previous {
        padding-left: 4.5em;
        position: relative;

        &:before,
        &:after {
            @include vendor(
                'transition',
                'opacity #{_duration(transition)} ease-in-out'
            );
            background-position: center left;
            background-repeat: no-repeat;
            background-size: 36px 24px;
            content: '';
            display: block;
            height: 100%;
            position: absolute;
            left: 1.5em;
            top: 0;
            vertical-align: middle;
            width: 36px;
        }

        &:before {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(fg-bold)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="0" y1="12.5" x2="9" y2="4" /><line x1="0" y1="11.5" x2="9" y2="20" /></svg>'
            );
        }

        &:after {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(highlight)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="0" y1="12.5" x2="9" y2="4" /><line x1="0" y1="11.5" x2="9" y2="20" /></svg>'
            );
            opacity: 0;
            z-index: 1;
        }

        &:hover,
        &:active {
            &:after {
                opacity: 1;
            }
        }

        @include breakpoint(large) {
            padding-left: 5em;
        }
    }

    &.next-effect {
        padding-right: 4.5em;
        position: relative;

        &:after {
            @include vendor(
                'transition',
                'background #{_duration(transition)} ease-in-out'
            );
            background-position: center right;
            background-repeat: no-repeat;
            background-size: 36px 24px;
            content: '';
            display: block;
            height: 100%;
            position: absolute;
            right: 1.5em;
            top: 0;
            vertical-align: middle;
            width: 36px;
        }

        &:after {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(fg)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="25" y1="4" x2="34" y2="12.5" /><line x1="25" y1="20" x2="34" y2="11.5" /></svg>'
            );
            z-index: 1;
        }

        &:hover,
        &:active {
            color: _palette(bg) !important;
            &:after {
                background-image: svg-url(
                    '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(bg)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="25" y1="4" x2="34" y2="12.5" /><line x1="25" y1="20" x2="34" y2="11.5" /></svg>'
                );
            }
        }

        @include breakpoint(large) {
            padding-right: 5em;
        }
    }

    &.previous-effect {
        padding-left: 4.5em;
        position: relative;

        &:after {
            @include vendor(
                'transition',
                'background #{_duration(transition)} ease-in-out'
            );
            background-position: center left;
            background-repeat: no-repeat;
            background-size: 36px 24px;
            content: '';
            display: block;
            height: 100%;
            position: absolute;
            left: 1.5em;
            top: 0;
            vertical-align: middle;
            width: 36px;
        }

        &:after {
            background-image: svg-url(
                '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(fg)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="0" y1="12.5" x2="9" y2="4" /><line x1="0" y1="11.5" x2="9" y2="20" /></svg>'
            );
            z-index: 1;
        }

        &:hover,
        &:active {
            color: _palette(bg) !important;
            &:after {
                background-image: svg-url(
                    '<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="36px" height="24px" viewBox="0 0 36 24" zoomAndPan="disable"><style>line { stroke: #{_palette(bg)}; stroke-width: 2px; }</style><line x1="0" y1="12" x2="34" y2="12" /><line x1="0" y1="12.5" x2="9" y2="4" /><line x1="0" y1="11.5" x2="9" y2="20" /></svg>'
                );
            }
        }

        @include breakpoint(large) {
            padding-left: 5em;
        }
    }

    &.special {
        background-color: _palette(fg-bold);
        box-shadow: none;
        color: _palette(bg);

        &:hover,
        &:active {
            background-color: _palette(highlight);
            color: _palette(bg) !important;
        }

        &:active {
            background-color: desaturate(darken(_palette(highlight), 15), 5);
        }
    }

    &.disabled,
    &:disabled {
        @include vendor('pointer-events', 'none');
        cursor: default;
        opacity: 0.25;
    }

    &.bottom-margin {
        margin-bottom: _size(element-margin);
    }
}

.effect {
    // color: inherit;
    // background: inherit;
    overflow: hidden;
    position: relative;
    z-index: 1;
    -webkit-backface-visibility: hidden;
    -moz-osx-font-smoothing: grayscale;

    &:before {
        content: '';
        z-index: -1;
        position: absolute;
        top: 50%;
        left: 100%;
        margin: -15px 0 0 1px;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        background: _palette(highlight);
        @include vendor('transform-origin', '100% 50%');
        @include vendor('transform', 'scale3d(1, 2, 1)');
        @include vendor(
            'transition-timing-function',
            'cubic-bezier(0.7,0,0.9,1)'
        );
        @include vendor(
            'transition',
            (
                'transform #{_duration(transition)} ease-in-out',
                'opacity #{_duration(transition)} ease-in-out'
            )
        );
    }

    &:hover {
        // color: _palette(bg) !important;
        // color: _palette(bg);
        &:before {
            @include vendor('transform', 'scale3d(9, 9, 1)');
        }
    }
}

.scroll {
    bottom: 40px;
    position: absolute;
    left: 50%;
    z-index: 1000;

    a {
        padding-top: 60px;
        position: relative;
        border-bottom: 0;

        span {
            position: absolute;
            top: 0;
            left: 50%;
            width: 30px;
            height: 50px;
            margin-left: -15px;
            border: 2px solid #fff;
            border-radius: 50px;
            box-sizing: border-box;

            &:before {
                position: absolute;
                top: 10px;
                left: 50%;
                content: '';
                width: 6px;
                height: 6px;
                margin-left: -3px;
                background-color: #fff;
                border-radius: 100%;
                -webkit-animation: sdb10 2s infinite;
                animation: sdb10 2s infinite;
                box-sizing: border-box;
            }

            @-webkit-keyframes sdb10 {
                0% {
                    -webkit-transform: translate(0, 0);
                    opacity: 0;
                }
                40% {
                    opacity: 1;
                }
                80% {
                    -webkit-transform: translate(0, 20px);
                    opacity: 0;
                }
                100% {
                    opacity: 0;
                }
            }
            @keyframes sdb10 {
                0% {
                    transform: translate(0, 0);
                    opacity: 0;
                }
                40% {
                    opacity: 1;
                }
                80% {
                    transform: translate(0, 20px);
                    opacity: 0;
                }
                100% {
                    opacity: 0;
                }
            }
        }
    }
}
